/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  LimitedMintPerAddress,
  LimitedMintPerAddressInterface,
} from "../../../../contracts/minters/utils/LimitedMintPerAddress";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requestedAmount",
        type: "uint256",
      },
    ],
    name: "UserExceedsMintLimit",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "getMintedPerWallet",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506103a4806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806301ffc9a71461003b5780637b49ff2c1461006b575b600080fd5b610055600480360381019061005091906101fa565b61009b565b6040516100629190610242565b60405180910390f35b610085600480360381019061008091906102f1565b610105565b6040516100929190610353565b60405180910390f35b60007f7b49ff2c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490509392505050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6101d7816101a2565b81146101e257600080fd5b50565b6000813590506101f4816101ce565b92915050565b6000602082840312156102105761020f61019d565b5b600061021e848285016101e5565b91505092915050565b60008115159050919050565b61023c81610227565b82525050565b60006020820190506102576000830184610233565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102888261025d565b9050919050565b6102988161027d565b81146102a357600080fd5b50565b6000813590506102b58161028f565b92915050565b6000819050919050565b6102ce816102bb565b81146102d957600080fd5b50565b6000813590506102eb816102c5565b92915050565b60008060006060848603121561030a5761030961019d565b5b6000610318868287016102a6565b9350506020610329868287016102dc565b925050604061033a868287016102a6565b9150509250925092565b61034d816102bb565b82525050565b60006020820190506103686000830184610344565b9291505056fea2646970667358221220111ebec90c6e4c6637fe85874474f4857ae2dbba16a54e17f549f35464a40cb464736f6c63430008140033";

type LimitedMintPerAddressConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LimitedMintPerAddressConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LimitedMintPerAddress__factory extends ContractFactory {
  constructor(...args: LimitedMintPerAddressConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      LimitedMintPerAddress & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): LimitedMintPerAddress__factory {
    return super.connect(runner) as LimitedMintPerAddress__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LimitedMintPerAddressInterface {
    return new Interface(_abi) as LimitedMintPerAddressInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): LimitedMintPerAddress {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as LimitedMintPerAddress;
  }
}
