/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  ERC20Minter,
  ERC20MinterInterface,
} from "../../../../contracts/minters/erc20/ERC20Minter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "AddressZero",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC20TransferSlippage",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCurrency",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyZoraRewardsRecipient",
    type: "error",
  },
  {
    inputs: [],
    name: "PricePerTokenTooLow",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "RequestMintInvalidUseMint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    inputs: [],
    name: "SaleEnded",
    type: "error",
  },
  {
    inputs: [],
    name: "SaleHasNotStarted",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requestedAmount",
        type: "uint256",
      },
    ],
    name: "UserExceedsMintLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongValueSent",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardPercentage",
        type: "uint256",
      },
    ],
    name: "ERC20MinterInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "createReferral",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "mintReferral",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "firstMinter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "zora",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "createReferralReward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mintReferralReward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "firstMinterReward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "zoraReward",
        type: "uint256",
      },
    ],
    name: "ERC20RewardsDeposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "comment",
        type: "string",
      },
    ],
    name: "MintComment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "mediaContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "saleStart",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "saleEnd",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "maxTokensPerAddress",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "pricePerToken",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "fundsRecipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct IERC20Minter.SalesConfig",
        name: "salesConfig",
        type: "tuple",
      },
    ],
    name: "SaleSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "prevRecipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "ZoraRewardsRecipientSet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalReward",
        type: "uint256",
      },
    ],
    name: "computePaidMintRewards",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "createReferralReward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "mintReferralReward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "zoraReward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "firstMinterReward",
            type: "uint256",
          },
        ],
        internalType: "struct IERC20Minter.RewardsSettings",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardPct",
        type: "uint256",
      },
    ],
    name: "computeReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalValue",
        type: "uint256",
      },
    ],
    name: "computeTotalReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "contractName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "contractVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getCreateReferral",
    outputs: [
      {
        internalType: "address",
        name: "createReferral",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getFirstMinter",
    outputs: [
      {
        internalType: "address",
        name: "firstMinter",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "getMintedPerWallet",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_zoraRewardRecipientAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "mintTo",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalValue",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "address",
        name: "mintReferral",
        type: "address",
      },
      {
        internalType: "string",
        name: "comment",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "requestMint",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "enum ICreatorCommands.CreatorActions",
                name: "method",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "args",
                type: "bytes",
              },
            ],
            internalType: "struct ICreatorCommands.Command[]",
            name: "commands",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "at",
            type: "uint256",
          },
        ],
        internalType: "struct ICreatorCommands.CommandSet",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "resetSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "sale",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "saleStart",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "saleEnd",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "maxTokensPerAddress",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "pricePerToken",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "fundsRecipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
        ],
        internalType: "struct IERC20Minter.SalesConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "saleStart",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "saleEnd",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "maxTokensPerAddress",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "pricePerToken",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "fundsRecipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
        ],
        internalType: "struct IERC20Minter.SalesConfig",
        name: "salesConfig",
        type: "tuple",
      },
    ],
    name: "setSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "setZoraRewardsRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalRewardPct",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "zoraRewardRecipientAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060016000819055506132df806100286000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806375d0c0dc116100ad578063c4d66de811610071578063c4d66de814610356578063ce35b8af14610372578063e2ebba291461038e578063e8a3d485146103be578063f54f216a146103dc57610121565b806375d0c0dc1461029e5780637b49ff2c146102bc5780638f4d174e146102ec578063a0a8e46014610308578063ac973d5b1461032657610121565b80635c046084116100f45780635c046084146101c05780635d759bd8146101f0578063611efc091461022057806362b60245146102505780636890e5b31461026e57610121565b806301ffc9a71461012657806319b45c4f146101565780634132239b146101725780635369d3e8146101a2575b600080fd5b610140600480360381019061013b919061220e565b6103f8565b60405161014d9190612256565b60405180910390f35b610170600480360381019061016b91906122a7565b61042a565b005b61018c600480360381019061018791906122a7565b6105c5565b60405161019991906122e3565b60405180910390f35b6101aa6105e7565b6040516101b7919061233f565b60405180910390f35b6101da60048036038101906101d591906122a7565b61060d565b6040516101e791906123be565b60405180910390f35b61020a60048036038101906102059190612405565b61069c565b604051610217919061233f565b60405180910390f35b61023a60048036038101906102359190612405565b61077b565b60405161024791906124f2565b60405180910390f35b610258610932565b60405161026591906122e3565b60405180910390f35b61028860048036038101906102839190612572565b61093b565b604051610295919061284f565b60405180910390f35b6102a6610975565b6040516102b391906128c6565b60405180910390f35b6102d660048036038101906102d191906128e8565b6109b2565b6040516102e391906122e3565b60405180910390f35b6103066004803603810190610301919061293b565b610a4b565b005b610310610bf8565b60405161031d91906128c6565b60405180910390f35b610340600480360381019061033b9190612405565b610c35565b60405161034d919061233f565b60405180910390f35b610370600480360381019061036b919061293b565b610d94565b005b61038c60048036038101906103879190612ab4565b610efe565b005b6103a860048036038101906103a39190612af4565b6111de565b6040516103b591906122e3565b60405180910390f35b6103c6611203565b6040516103d391906128c6565b60405180910390f35b6103f660048036038101906103f19190612b8a565b611223565b005b60006104038261165d565b8061041357506104128261165d565b5b806104235750610422826116c7565b5b9050919050565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828152602001908152602001600020600080820160006101000a81549067ffffffffffffffff02191690556000820160086101000a81549067ffffffffffffffff02191690556000820160106101000a81549067ffffffffffffffff021916905560018201600090556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556003820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555050803373ffffffffffffffffffffffffffffffffffffffff167f5a10ca3dd9f8e42a050c7f379d07bacd686570baf0b1c8574362fc474a9aa1a0600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000206040516105ba9190612df8565b60405180910390a350565b600060646005836105d69190612e42565b6105e09190612eb3565b9050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106156120e0565b6000610625836301b3f7086111de565b90506000610637846301b3f7086111de565b905060006106488562d91c146111de565b905060008183856106599190612ee4565b6106639190612ee4565b8661066e9190612f18565b9050604051806080016040528085815260200184815260200182815260200183815250945050505050919050565b60008273ffffffffffffffffffffffffffffffffffffffff16637dafae4d836040518263ffffffff1660e01b81526004016106d791906122e3565b602060405180830381865afa92505050801561071157506040513d601f19601f8201168201806040525081019061070e9190612f61565b60015b1561071b57809150505b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361077557600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505b92915050565b610783612108565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206040518060c00160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160109054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905092915050565b60006005905090565b610943612188565b6040517f9274ec1d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60606040518060400160405280600c81526020017f4552433230204d696e7465720000000000000000000000000000000000000000815250905090565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490509392505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ad2576040517f8ba1835100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b38576040517f9fabe1c100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fc93702c5f2a62678849c2f198d92f7833a8d4a8afc765cf15693222ab5b15e5060405160405180910390a380600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606040518060400160405280600581526020017f312e302e30000000000000000000000000000000000000000000000000000000815250905090565b60008273ffffffffffffffffffffffffffffffffffffffff16639ebb8324836040518263ffffffff1660e01b8152600401610c7091906122e3565b602060405180830381865afa925050508015610caa57506040513d601f19601f82011682018060405250810190610ca79190612f61565b60015b610cd857600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050610d8e565b809150600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d8c578373ffffffffffffffffffffffffffffffffffffffff16635e4e0404846040518263ffffffff1660e01b8152600401610d4891906122e3565b602060405180830381865afa158015610d65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d899190612f61565b91505b505b92915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610dfa576040517f9fabe1c100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e82576040517f0dc149f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f658c97f8591190c843529a9019f5ae8055b6c690ab14156b0e589a5253c5ccb96005604051610ef391906122e3565b60405180910390a150565b61271081606001511015610f3e576040517f835de65800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168160a0015173ffffffffffffffffffffffffffffffffffffffff1603610fa8576040517f9fabe1c100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16816080015173ffffffffffffffffffffffffffffffffffffffff1603611012576040517f9fabe1c100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060408201518160000160106101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506060820151816001015560808201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050813373ffffffffffffffffffffffffffffffffffffffff167f5a10ca3dd9f8e42a050c7f379d07bacd686570baf0b1c8574362fc474a9aa1a0836040516111d291906124f2565b60405180910390a35050565b60006305f5e10082846111f19190612e42565b6111fb9190612eb3565b905092915050565b606060405180606001604052806029815260200161328160299139905090565b61122b611799565b6000600360008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008881526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061132e57508473ffffffffffffffffffffffffffffffffffffffff168160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b15611365576040517ff599342800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8881600101546113759190612e42565b86146113ad576040517f2f4613eb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff16421015611409576040517fe8c4db8200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060000160089054906101000a900467ffffffffffffffff1667ffffffffffffffff16421115611465576040517f0bd8a3eb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008160000160109054906101000a900467ffffffffffffffff1667ffffffffffffffff1611156114c0576114bf8160000160109054906101000a900467ffffffffffffffff1667ffffffffffffffff168a8a8a8e6117df565b5b6114ca85876119ed565b8773ffffffffffffffffffffffffffffffffffffffff1663c238d1ee8b898c6040518463ffffffff1660e01b815260040161150793929190612fc5565b600060405180830381600087803b15801561152157600080fd5b505af1158015611535573d6000803e3d6000fd5b505050506000611544876105c5565b905061155381878a8c89611b60565b6115d18260020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682896115879190612f18565b8460030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611d879092919063ffffffff16565b600084849050111561164857878973ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff167fb9490aee663998179ad13f9e1c1eb6189c71ad1a9ec87f33ad2766f98d9a268a8d888860405161163f9392919061304b565b60405180910390a45b5050611652611e06565b505050505050505050565b60007f7b49ff2c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60007f6890e5b3000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061179257507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6002600054036117d5576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600081905550565b83600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461187c9190612ee4565b9250508190555084600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411156119e6578085600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040517fe2d915640000000000000000000000000000000000000000000000000000000081526004016119dd9392919061307d565b60405180910390fd5b5050505050565b60008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611a28919061233f565b602060405180830381865afa158015611a45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a6991906130c9565b9050611a983330848673ffffffffffffffffffffffffffffffffffffffff16611e10909392919063ffffffff16565b60008373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611ad3919061233f565b602060405180830381865afa158015611af0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b1491906130c9565b9050808383611b239190612ee4565b14611b5a576040517fdc5b522d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b6000611b6b8661060d565b90506000611b79848661069c565b90506000611b878587610c35565b9050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611be357600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1693505b611c128284600001518973ffffffffffffffffffffffffffffffffffffffff16611d879092919063ffffffff16565b611c418184606001518973ffffffffffffffffffffffffffffffffffffffff16611d879092919063ffffffff16565b611c708484602001518973ffffffffffffffffffffffffffffffffffffffff16611d879092919063ffffffff16565b611cc1600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684604001518973ffffffffffffffffffffffffffffffffffffffff16611d879092919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f6d43fd9d85f88450d1b777b5e7d58dec9b8dd36d77bf01bc5e5423d4a92d2246600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16898c8c8a600001518b602001518c606001518d60400151604051611d759897969594939291906130f6565b60405180910390a45050505050505050565b611e01838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611dba929190613174565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611e92565b505050565b6001600081905550565b611e8c848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401611e459392919061319d565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611e92565b50505050565b6000611ebd828473ffffffffffffffffffffffffffffffffffffffff16611f2990919063ffffffff16565b90506000815114158015611ee2575080806020019051810190611ee09190613200565b155b15611f2457826040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401611f1b919061233f565b60405180910390fd5b505050565b6060611f3783836000611f3f565b905092915050565b606081471015611f8657306040517fcd786059000000000000000000000000000000000000000000000000000000008152600401611f7d919061233f565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff168486604051611faf9190613269565b60006040518083038185875af1925050503d8060008114611fec576040519150601f19603f3d011682016040523d82523d6000602084013e611ff1565b606091505b509150915061200186838361200c565b925050509392505050565b6060826120215761201c8261209b565b612093565b60008251148015612049575060008473ffffffffffffffffffffffffffffffffffffffff163b145b1561208b57836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401612082919061233f565b60405180910390fd5b819050612094565b5b9392505050565b6000815111156120ae5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518060800160405280600081526020016000815260200160008152602001600081525090565b6040518060c00160405280600067ffffffffffffffff168152602001600067ffffffffffffffff168152602001600067ffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b604051806040016040528060608152602001600081525090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6121eb816121b6565b81146121f657600080fd5b50565b600081359050612208816121e2565b92915050565b600060208284031215612224576122236121ac565b5b6000612232848285016121f9565b91505092915050565b60008115159050919050565b6122508161223b565b82525050565b600060208201905061226b6000830184612247565b92915050565b6000819050919050565b61228481612271565b811461228f57600080fd5b50565b6000813590506122a18161227b565b92915050565b6000602082840312156122bd576122bc6121ac565b5b60006122cb84828501612292565b91505092915050565b6122dd81612271565b82525050565b60006020820190506122f860008301846122d4565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612329826122fe565b9050919050565b6123398161231e565b82525050565b60006020820190506123546000830184612330565b92915050565b61236381612271565b82525050565b60808201600082015161237f600085018261235a565b506020820151612392602085018261235a565b5060408201516123a5604085018261235a565b5060608201516123b8606085018261235a565b50505050565b60006080820190506123d36000830184612369565b92915050565b6123e28161231e565b81146123ed57600080fd5b50565b6000813590506123ff816123d9565b92915050565b6000806040838503121561241c5761241b6121ac565b5b600061242a858286016123f0565b925050602061243b85828601612292565b9150509250929050565b600067ffffffffffffffff82169050919050565b61246281612445565b82525050565b6124718161231e565b82525050565b60c08201600082015161248d6000850182612459565b5060208201516124a06020850182612459565b5060408201516124b36040850182612459565b5060608201516124c6606085018261235a565b5060808201516124d96080850182612468565b5060a08201516124ec60a0850182612468565b50505050565b600060c0820190506125076000830184612477565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126125325761253161250d565b5b8235905067ffffffffffffffff81111561254f5761254e612512565b5b60208301915083600182028301111561256b5761256a612517565b5b9250929050565b60008060008060008060a0878903121561258f5761258e6121ac565b5b600061259d89828a016123f0565b96505060206125ae89828a01612292565b95505060406125bf89828a01612292565b94505060606125d089828a01612292565b935050608087013567ffffffffffffffff8111156125f1576125f06121b1565b5b6125fd89828a0161251c565b92509250509295509295509295565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811061267857612677612638565b5b50565b600081905061268982612667565b919050565b60006126998261267b565b9050919050565b6126a98161268e565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156126e95780820151818401526020810190506126ce565b60008484015250505050565b6000601f19601f8301169050919050565b6000612711826126af565b61271b81856126ba565b935061272b8185602086016126cb565b612734816126f5565b840191505092915050565b600060408301600083015161275760008601826126a0565b506020830151848203602086015261276f8282612706565b9150508091505092915050565b6000612788838361273f565b905092915050565b6000602082019050919050565b60006127a88261260c565b6127b28185612617565b9350836020820285016127c485612628565b8060005b8581101561280057848403895281516127e1858261277c565b94506127ec83612790565b925060208a019950506001810190506127c8565b50829750879550505050505092915050565b6000604083016000830151848203600086015261282f828261279d565b9150506020830151612844602086018261235a565b508091505092915050565b600060208201905081810360008301526128698184612812565b905092915050565b600081519050919050565b600082825260208201905092915050565b600061289882612871565b6128a2818561287c565b93506128b28185602086016126cb565b6128bb816126f5565b840191505092915050565b600060208201905081810360008301526128e0818461288d565b905092915050565b600080600060608486031215612901576129006121ac565b5b600061290f868287016123f0565b935050602061292086828701612292565b9250506040612931868287016123f0565b9150509250925092565b600060208284031215612951576129506121ac565b5b600061295f848285016123f0565b91505092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6129a5826126f5565b810181811067ffffffffffffffff821117156129c4576129c361296d565b5b80604052505050565b60006129d76121a2565b90506129e3828261299c565b919050565b6129f181612445565b81146129fc57600080fd5b50565b600081359050612a0e816129e8565b92915050565b600060c08284031215612a2a57612a29612968565b5b612a3460c06129cd565b90506000612a44848285016129ff565b6000830152506020612a58848285016129ff565b6020830152506040612a6c848285016129ff565b6040830152506060612a8084828501612292565b6060830152506080612a94848285016123f0565b60808301525060a0612aa8848285016123f0565b60a08301525092915050565b60008060e08385031215612acb57612aca6121ac565b5b6000612ad985828601612292565b9250506020612aea85828601612a14565b9150509250929050565b60008060408385031215612b0b57612b0a6121ac565b5b6000612b1985828601612292565b9250506020612b2a85828601612292565b9150509250929050565b60008083601f840112612b4a57612b4961250d565b5b8235905067ffffffffffffffff811115612b6757612b66612512565b5b602083019150836001820283011115612b8357612b82612517565b5b9250929050565b60008060008060008060008060006101008a8c031215612bad57612bac6121ac565b5b6000612bbb8c828d016123f0565b9950506020612bcc8c828d01612292565b9850506040612bdd8c828d016123f0565b9750506060612bee8c828d01612292565b9650506080612bff8c828d01612292565b95505060a0612c108c828d016123f0565b94505060c0612c218c828d016123f0565b93505060e08a013567ffffffffffffffff811115612c4257612c416121b1565b5b612c4e8c828d01612b34565b92509250509295985092959850929598565b60008160001c9050919050565b600067ffffffffffffffff82169050919050565b6000612c94612c8f83612c60565b612c6d565b9050919050565b60008160401c9050919050565b6000612cbb612cb683612c9b565b612c6d565b9050919050565b60008160801c9050919050565b6000612ce2612cdd83612cc2565b612c6d565b9050919050565b6000819050919050565b6000612d06612d0183612c60565b612ce9565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612d40612d3b83612c60565b612d0d565b9050919050565b60c082016000808301549050612d5c81612c81565b612d696000860182612459565b50612d7381612ca8565b612d806020860182612459565b50612d8a81612ccf565b612d976040860182612459565b5060018301549050612da881612cf3565b612db5606086018261235a565b5060028301549050612dc681612d2d565b612dd36080860182612468565b5060038301549050612de481612d2d565b612df160a0860182612468565b5050505050565b600060c082019050612e0d6000830184612d47565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612e4d82612271565b9150612e5883612271565b9250828202612e6681612271565b91508282048414831517612e7d57612e7c612e13565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612ebe82612271565b9150612ec983612271565b925082612ed957612ed8612e84565b5b828204905092915050565b6000612eef82612271565b9150612efa83612271565b9250828201905080821115612f1257612f11612e13565b5b92915050565b6000612f2382612271565b9150612f2e83612271565b9250828203905081811115612f4657612f45612e13565b5b92915050565b600081519050612f5b816123d9565b92915050565b600060208284031215612f7757612f766121ac565b5b6000612f8584828501612f4c565b91505092915050565b600082825260208201905092915050565b50565b6000612faf600083612f8e565b9150612fba82612f9f565b600082019050919050565b6000608082019050612fda6000830186612330565b612fe760208301856122d4565b612ff460408301846122d4565b818103606083015261300581612fa2565b9050949350505050565b82818337600083830152505050565b600061302a838561287c565b935061303783858461300f565b613040836126f5565b840190509392505050565b600060408201905061306060008301866122d4565b818103602083015261307381848661301e565b9050949350505050565b60006060820190506130926000830186612330565b61309f60208301856122d4565b6130ac60408301846122d4565b949350505050565b6000815190506130c38161227b565b92915050565b6000602082840312156130df576130de6121ac565b5b60006130ed848285016130b4565b91505092915050565b60006101008201905061310c600083018b612330565b613119602083018a612330565b6131266040830189612330565b61313360608301886122d4565b61314060808301876122d4565b61314d60a08301866122d4565b61315a60c08301856122d4565b61316760e08301846122d4565b9998505050505050505050565b60006040820190506131896000830185612330565b61319660208301846122d4565b9392505050565b60006060820190506131b26000830186612330565b6131bf6020830185612330565b6131cc60408301846122d4565b949350505050565b6131dd8161223b565b81146131e857600080fd5b50565b6000815190506131fa816131d4565b92915050565b600060208284031215613216576132156121ac565b5b6000613224848285016131eb565b91505092915050565b600081905092915050565b6000613243826126af565b61324d818561322d565b935061325d8185602086016126cb565b80840191505092915050565b60006132758284613238565b91508190509291505056fe68747470733a2f2f6769746875622e636f6d2f6f75727a6f72612f7a6f72612d70726f746f636f6c2fa26469706673582212207fac483e096c887d52e418d4e424ac1bca82c219e33e49feb8c6caa36844a1d964736f6c63430008140033";

type ERC20MinterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20MinterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Minter__factory extends ContractFactory {
  constructor(...args: ERC20MinterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ERC20Minter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC20Minter__factory {
    return super.connect(runner) as ERC20Minter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20MinterInterface {
    return new Interface(_abi) as ERC20MinterInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ERC20Minter {
    return new Contract(address, _abi, runner) as unknown as ERC20Minter;
  }
}
