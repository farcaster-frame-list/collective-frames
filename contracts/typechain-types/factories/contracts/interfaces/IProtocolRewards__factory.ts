/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IProtocolRewards,
  IProtocolRewardsInterface,
} from "../../../contracts/interfaces/IProtocolRewards";

const _abi = [
  {
    inputs: [],
    name: "ADDRESS_ZERO",
    type: "error",
  },
  {
    inputs: [],
    name: "ARRAY_LENGTH_MISMATCH",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_DEPOSIT",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_SIGNATURE",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_WITHDRAW",
    type: "error",
  },
  {
    inputs: [],
    name: "SIGNATURE_DEADLINE_EXPIRED",
    type: "error",
  },
  {
    inputs: [],
    name: "TRANSFER_FAILED",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes4",
        name: "reason",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "comment",
        type: "string",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "createReferral",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "mintReferral",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "firstMinter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "zora",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "creatorReward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "createReferralReward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mintReferralReward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "firstMinterReward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "zoraReward",
        type: "uint256",
      },
    ],
    name: "RewardsDeposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "why",
        type: "bytes4",
      },
      {
        internalType: "string",
        name: "comment",
        type: "string",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes4[]",
        name: "reasons",
        type: "bytes4[]",
      },
      {
        internalType: "string",
        name: "comment",
        type: "string",
      },
    ],
    name: "depositBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "creatorReward",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "createReferral",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "createReferralReward",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "mintReferral",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "mintReferralReward",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "firstMinter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "firstMinterReward",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "zora",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "zoraReward",
        type: "uint256",
      },
    ],
    name: "depositRewards",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "withdrawWithSig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IProtocolRewards__factory {
  static readonly abi = _abi;
  static createInterface(): IProtocolRewardsInterface {
    return new Interface(_abi) as IProtocolRewardsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IProtocolRewards {
    return new Contract(address, _abi, runner) as unknown as IProtocolRewards;
  }
}
